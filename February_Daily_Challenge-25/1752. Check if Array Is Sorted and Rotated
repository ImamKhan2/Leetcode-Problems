class Solution {
    public boolean check(int[] nums) {
        int n = nums.length;  // Get the length of the array
        int count = 0;        // Initialize a count to keep track of drops in order
        
        for (int i = 0; i < n; i++) {
            // Compare each element with the next element, considering circular rotation
            if (nums[i] > nums[(i + 1) % n]) {
                count++;  // Increment count if there's a drop (i.e., nums[i] > nums[i + 1])
            }
        }
        
        // If there is more than one drop, the array is not sorted and rotated
        return count <= 1;
    }
}

// TC O(n)
// SC O(1)
