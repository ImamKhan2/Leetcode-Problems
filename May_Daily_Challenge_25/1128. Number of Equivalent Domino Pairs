class Solution {
    public int numEquivDominoPairs(int[][] dominoes) {

        int[] count = new int[100];  // Since max a,b is 9, max index = 9*10 + 9 = 99
        int result = 0;

        for (int[] d : dominoes) {
            int a = Math.min(d[0], d[1]);
            int b = Math.max(d[0], d[1]);
            int key = a * 10 + b;

            result += count[key];
            count[key]++;
        }

        return result;
        
        // // TLE
        // int count = 0;
        // int n = dominoes.length;

        // for (int i = 0; i < n; i++) {
        //     for (int j = i + 1; j < n; j++) {
        //         int a = dominoes[i][0];
        //         int b = dominoes[i][1];
        //         int c = dominoes[j][0];
        //         int d = dominoes[j][1];

        //         if ((a == c && b == d) || (a == d && b == c)) {
        //             count++;
        //         }
        //     }
        // }
        // return count;
    }
}

// TC O(n^2)
// SC O(1)
